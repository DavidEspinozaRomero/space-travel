---
import "../styles/components/_tabs.scss";

interface Props {
  name?: string;
  articles: Article[];
}

interface Article {
  tabLabel: string;
  title: string;
  description: string;
  distance: string;
  travel: string;
  images: {
    png: string,
    webp: string
  }
}

const { articles, name = "tabs" } = Astro.props;
---

<!-- Tabs -->

    <div class="wrapper">
      <section class="tabs flex">
        {
          articles.map(({tabLabel, title}, i) => (<section class="tab">
            <input id={tabLabel} type="radio" name={name} checked={i === 0} />
            <label for={tabLabel} class="tab__title ff-sans-cond fs-8 uppercase" > {tabLabel} </label>
          </section>))
        }
      </section>

      <section class="content">
        
        {
        articles.map(({title,description,distance,travel}, i) => (
        <article hidden={i !== 0}>
          <h2 class="sr-only"> {title} </h2>
          <p class="uppercase fs-2 ff-serif content-title"> {title} </p>
          <p class="fs-9 text-accent">
            {description}
          </p>
          <hr>
          <div class="extra-info">
            <div>
              <p class="uppercase text-accent fs-7 ff-sans-cond"> avg. distance</p>	
              <p class="fs-6 ff-serif uppercase">
                {distance}
              </p>
            </div>
            <div>
              <p class="uppercase text-accent fs-7 ff-sans-cond"> est. travel time</p>	
              <p class="fs-6 ff-serif uppercase">
                {travel}
              </p>
            </div>

          </div>
        </article>))
        }
      </section>
    </div>

    <script>
      const images = ["src/assets/destination/image-moon.webp",
"src/assets/destination/image-mars.webp",
"src/assets/destination/image-europa.webp",
"src/assets/destination/image-titan.webp"]
      const img = document.querySelector('.planet-img');
      const tabs = document.querySelectorAll(".tab");
      const content = document.querySelectorAll(".content article");

      tabs.forEach((tab, idx) => {
        tab.addEventListener("click", () => {
          content.forEach((c) => {
            const isHidden = c.hasAttribute("hidden");
            if (!isHidden) c.toggleAttribute("hidden");
          });
          content[idx].removeAttribute("hidden");
          img!.src = images[idx];
        });
      });
    </script>
  
<style></style>